card_tasmota_version:
  variables:
    ulm_card_tasmota_entity: 'sensor.number_of_tasmota_versions_old'
    ulm_card_tasmota_latest_version: 'sensor.tasmota_latest'
    ulm_card_tasmota_sync_script: 'script.tasmotas_state_sync'
  triggers_update: "all"
  styles:
    grid:
      - grid-template-areas: "'item1'"
      - grid-template-columns: "1fr"
      - grid-template-rows: "min-content"
      - row-gap: "12px"
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      #- padding: "var(--card-padding)"
      - padding: "0px 0px 12px 0px"
  custom_fields:
    item1:
      card:
        triggers_update: "all"
        type: "custom:button-card"
        template:
          - "icon_info"
          - "card_tasmota_devices_outdated"
          - "ulm_language_variables_EN"
        variables:
          ulm_card_tasmota_latest_version: "[[[ return variables.ulm_card_tasmota_latest_version ]]]"
        icon: 'mdi:chip'
        tap_action:
          action: "none"
        entity: "[[[ return variables.ulm_card_tasmota_entity ]]]"
        #name: "[[[ return 'Latest: ' + states[variables.ulm_card_tasmota_latest_version].state ]]]"


card_tasmota:
  template:
    - "icon_info_bg"
    #- "card_tasmota_outdated"
    - "ulm_language_variables_EN"
    - "blue"
    - "popup_tasmota"
  variables:
    ulm_card_tasmota_version: "[[[ return variables.ulm_card_tasmota_version ]]]"
    ulm_card_tasmota_latest_version: "[[[ return variables.ulm_card_tasmota_latest_version ]]]"
    ulm_card_tasmota_name: "[[[ return variables.ulm_card_tasmota_name ]]]"
    ulm_card_tasmota_entity: "[[[ return variables.ulm_card_tasmota_entity ]]]"
    ulm_card_tasmota_icon: "[[[ return variables.ulm_card_tasmota_icon ]]]"
    ulm_card_tasmota_last_restart: "[[[ return variables.ulm_card_tasmota_last_restart ]]]"
    ulm_card_tasmota_wi_fi_quality: "[[[ return variables.ulm_card_tasmota_wi_fi_quality ]]]"
    ulm_card_tasmota_ip: "[[[ return variables.ulm_card_tasmota_ip ]]]"
  icon: "[[[ return variables.ulm_card_tasmota_icon ]]]"
  label: "[[[ return variables.ulm_card_tasmota_name ]]]"
  name: |
    [[[ 
      if (states[variables.ulm_card_tasmota_version].state == "unavailable")
        return variables.ulm_unavailable;
        
      var version = states[variables.ulm_card_tasmota_version].state;
      version = version.split("(")[0];
      return "v" + version; 
    ]]]


card_tasmota_with_power:
  template:
    - "icon_info_bg"
    #- "card_tasmota_outdated"
    - "ulm_language_variables_EN"
    - "blue"
    - "popup_tasmota_with_power"
  variables:
    ulm_card_tasmota_version: "[[[ return variables.ulm_card_tasmota_version ]]]"
    ulm_card_tasmota_latest_version: "[[[ return variables.ulm_card_tasmota_latest_version ]]]"
    ulm_card_tasmota_name: "[[[ return variables.ulm_card_tasmota_name ]]]"
    ulm_card_tasmota_entity: "[[[ return variables.ulm_card_tasmota_entity ]]]"
    ulm_card_tasmota_icon: "[[[ return variables.ulm_card_tasmota_icon ]]]"
    ulm_card_tasmota_last_restart: "[[[ return variables.ulm_card_tasmota_last_restart ]]]"
    ulm_card_tasmota_wi_fi_quality: "[[[ return variables.ulm_card_tasmota_wi_fi_quality ]]]"
    ulm_card_tasmota_ip: "[[[ return variables.ulm_card_tasmota_ip ]]]"
    ulm_card_tasmota_current: "[[[ return variables.ulm_card_tasmota_current ]]]"
    ulm_card_tasmota_energy_today: "[[[ return variables.ulm_card_tasmota_energy_today ]]]"
    ulm_card_tasmota_power: "[[[ return variables.ulm_card_tasmota_power ]]]"
    ulm_card_tasmota_latest_voltage: "[[[ return variables.ulm_card_tasmota_latest_voltage ]]]"
  icon: "[[[ return variables.ulm_card_tasmota_icon ]]]"
  label: "[[[ return variables.ulm_card_tasmota_name ]]]"
  name: |
    [[[ 
      if (states[variables.ulm_card_tasmota_version].state == "unavailable")
        return variables.ulm_unavailable;
        
      var version = states[variables.ulm_card_tasmota_version].state;
      version = version.split("(")[0];
      return "v" + version; 
    ]]]



card_tasmota_devices_outdated:
  state:
    - operator: 'template'
      value: >
        [[[
          return entity.state > 0;
        ]]]
      styles:
        # custom_fields:
        #   notification:
        #     - position: "absolute"
        #     - left: "40px"
        #     - top: "8px"
        icon:
          - color: 'var(--color-blue-icon)'
        img_cell:
          - background-color: 'var(--color-blue-icon-background)'
  name: >
    [[[
      if ( states[variables.ulm_card_tasmota_latest_version].state == "" )
        return "Latest: --";
      else
        return "Latest: " + states[variables.ulm_card_tasmota_latest_version].state;
    ]]]
  label: >
    [[[
      if (entity.state > 0)
        return entity.state + " devices outdated";
      else
        return "All devices updated";
    ]]]
  # custom_fields:
  #   notification:
  #     card:
  #       type: "custom:button-card"
  #       template: "badge"
  #       icon: >
  #         [[[
  #           if ( entity.state =="unavailable" ) {
  #             return "mdi:exclamation";
  #           } else if ( entity.state > 0 ) {
  #             return "mdi:party-popper";
  #           }
  #         ]]]
  #       variables:
  #         ulm_badge_icon_backgroung_color: >
  #           [[[
  #             if ( entity.state =="unavailable" ) {
  #               return "rgba(var(--color-red),1)";
  #             } else if ( entity.state > 0 ) {
  #               return "rgba(var(--color-blue),1)";
  #             }
  #           ]]]


card_tasmota_outdated:
  state:
    - operator: 'template'
      value: >
        [[[
          return states[variables.ulm_card_tasmota_latest_version].state.split('v')[1] != states[variables.ulm_card_tasmota_version].state.split('(')[0];
        ]]]
      styles:
        custom_fields:
          notification:
            - position: "absolute"
            - left: "40px"
            - top: "8px"
  custom_fields:
    notification:
      card:
        type: "custom:button-card"
        template: "badge"
        icon: >
          [[[
            if ( entity.state =="unavailable" ) {
              return "mdi:exclamation";
            } else if ( states[variables.ulm_card_tasmota_latest_version].state.split('v')[1] != states[variables.ulm_card_tasmota_version].state.split('(')[0] ) {
              return "mdi:party-popper";
            }
          ]]]
        variables:
          ulm_badge_icon_backgroung_color: >
            [[[
              if ( entity.state =="unavailable" ) {
                return "rgba(var(--color-red),1)";
              } else if ( states[variables.ulm_card_tasmota_latest_version].state.split('v')[1] != states[variables.ulm_card_tasmota_version].state.split('(')[0] ) {
                return "rgba(var(--color-blue),1)";
              }
            ]]]