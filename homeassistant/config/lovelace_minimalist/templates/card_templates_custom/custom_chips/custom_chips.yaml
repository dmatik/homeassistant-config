chip_back_new:
  template: 
    - 'chip_icon_label_state'
    - 'chip_navigate_only'
  icon: "mdi:arrow-left"

chip_icon_label_state:
  # variables:
  #   ulm_chip_icon_state_entity: ''
  triggers_update: 'all'
  show_icon: 'true'
  show_name: 'false'
  show_label: 'true'
  size: '100%'
  styles:
    card:
      - box-shadow: 'var(--box-shadow)'
      - border-radius: '18px'
      - height: '38px'
      - width: 'auto'
      - padding-left: '8px'
      - padding-right: '8px'
      - padding-top: '0px'
      - padding-bottom: '0px'
      - --mdc-ripple-press-opacity: 0.0
    grid:
      - grid-template-areas: "'i l'"
      - grid-template-columns: 'max_content auto'
      - grid-template-rows: 'min-content'
    img_cell:
      - display: flex
      - justify-content: center
      - align-items: center    
      #- place-self: 'center'
      - width: '20px'
      - height: '36px'
      - padding-right: '0px'
      - padding-left: '0px'
    icon:
      - display: flex
      - justify-content: center
      - align-items: center      
    label:
      - display: flex
      - justify-content: center
      - align-items: center
      - justify-self: 'center'
      - font-weight: 500
      - font-size: '16px'
      - margin-left: '0px'
      - width: 'auto'
      - padding-left: '2px'
      - padding-right: '2px'
      - height: '36px'
      - width: 'auto'      
  label: |
      [[[
        var state = "";
        if (variables.ulm_chip_icon_state_entity != null && states[variables.ulm_chip_icon_state_entity].state){
          state = states[variables.ulm_chip_icon_state_entity].state;
          if (states[variables.ulm_chip_icon_state_entity].attributes.unit_of_measurement){
            state += " " + states[variables.ulm_chip_icon_state_entity].attributes.unit_of_measurement;
          }
        }
        return state;
      ]]]
  state:
    - operator: "template"
      value: '[[[ return variables.ulm_chip_icon_state_entity == null || states[variables.ulm_chip_icon_state_entity].state == 0 ]]]'
      styles:
        label:
          - display: 'none'

chip_navigate_only:
  tap_action:
    action: 'navigate'
    navigation_path: '[[[ return variables.ulm_chip_navigate_path; ]]]'

chip_yellow:
  state:
    - operator: "template"
      value: '[[[ return states[variables.ulm_chip_icon_state_entity].state > 0 ]]]'
      styles:
        icon:
          - color: 'rgba(var(--color-yellow),1)'

chip_blue:
  state:
    - operator: "template"
      value: '[[[ return states[variables.ulm_chip_icon_state_entity].state > 0 ]]]'
      styles:
        icon:
          - color: 'rgba(var(--color-blue),1)'

chip_blue_no_state:
  styles:
    icon:
      - color: "rgba(var(--color-blue),1)"

chip_air_polution_colors:
  variables:
    ulm_card_air_quality_green: 50
    ulm_card_air_quality_yellow: 100
  state:
    - operator: "template"
      value: '[[[ return states[variables.ulm_chip_icon_state_entity].state <= variables.ulm_card_air_quality_green ]]]'
      styles:
        icon:
          - color: 'rgba(var(--color-green),1)'
    - operator: "template"
      value: '[[[ return ( states[variables.ulm_chip_icon_state_entity].state > variables.ulm_card_air_quality_green && 
                            states[variables.ulm_chip_icon_state_entity].state <= variables.ulm_card_air_quality_yellow ) ]]]'
      styles:
        icon:
          - color: 'rgba(var(--color-yellow),1)'
    - operator: "template"
      value: '[[[ return states[variables.ulm_chip_icon_state_entity].state > variables.ulm_card_air_quality_yellow ]]]'
      styles:
        icon:
          - color: 'rgba(var(--color-red),1)'


chip_air_polution_icons:
  variables:
    ulm_card_air_quality_green: 50
    ulm_card_air_quality_yellow: 100
  icon: >
    [[[
      if (states[variables.ulm_chip_icon_state_entity].state <= variables.ulm_card_air_quality_green) {
        return 'mdi:emoticon-happy';
      }
      if (states[variables.ulm_chip_icon_state_entity].state > variables.ulm_card_air_quality_green && states[variables.ulm_chip_icon_state_entity].state <= variables.ulm_card_air_quality_yellow) {
        return 'mdi:emoticon-neutral';
      }
      if (states[variables.ulm_chip_icon_state_entity].state > variables.ulm_card_air_quality_yellow) {
        return 'mdi:emoticon-sad';
      }      
    ]]]

chip_climate:
  triggers_update: 'all'
  show_icon: 'true'
  show_name: 'false'
  show_label: 'true'
  size: '100%'
  styles:
    card:
      - box-shadow: 'var(--box-shadow)'
      - border-radius: '18px'
      - height: '38px'
      - width: 'auto'
      - padding-left: '8px'
      - padding-right: '8px'
      - padding-top: '0px'
      - padding-bottom: '0px'
      - --mdc-ripple-press-opacity: 0.0
    grid:
      - grid-template-areas: "'i l'"
      - grid-template-columns: 'max_content auto'
      - grid-template-rows: 'min-content'
    img_cell:
      - display: flex
      - justify-content: center
      - align-items: center    
      #- place-self: 'center'
      - width: '20px'
      - height: '36px'
      - padding-right: '0px'
      - padding-left: '0px'
    icon:
      - display: flex
      - justify-content: center
      - align-items: center
      - color: |
          [[[
            if (states[variables.ulm_chip_devices_on].state > 0) {
              return "rgba(var(--color-blue),1)";
            }
            return "rgb(var(--primary-text-color))";
          ]]]      
    label:
      - display: flex
      - justify-content: center
      - align-items: center
      - justify-self: 'center'
      - font-weight: 500
      - font-size: '16px'
      - margin-left: '0px'
      - width: 'auto'
      - padding-left: '2px'
      - padding-right: '2px'
      - height: '36px'
      - width: 'auto'      
  label: |
      [[[
        var state = "";
        if (states[variables.ulm_chip_temperature_high].state - states[variables.ulm_chip_temperature_low].state < 0.5) {
          state = states[variables.ulm_chip_temperature_high].state + "°";
        } else {
          state = states[variables.ulm_chip_temperature_low].state + "-" + states[variables.ulm_chip_temperature_high].state + "°";
        }
        if (states[variables.ulm_chip_devices_on].state > 0) {
          state += " • " + states[variables.ulm_chip_devices_on].state;
        }
        return state;
      ]]]
  icon: "mdi:fan"   