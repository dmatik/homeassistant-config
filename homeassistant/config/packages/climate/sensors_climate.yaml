template:
  - sensor:
      # - unique_id: climate_kfir_temp
      #   name: "Kfir Room Temperature"
      #   unit_of_measurement: "°C"
      #   icon: mdi:thermometer
      #   state: "{{ states('sensor.kfir_room_temperature_sensor_temperature') }}"
      #   availability: "{{ is_number(states('sensor.kfir_room_temperature_sensor_temperature')) }}"

      # - unique_id: climate_ronen_temp
      #   name: "Ronen Room Temperature"
      #   unit_of_measurement: "°C"
      #   icon: mdi:thermometer
      #   state: "{{ states('sensor.ronen_room_temperature_sensor_temperature') }}"
      #   availability: "{{ is_number(states('sensor.ronen_room_temperature_sensor_temperature')) }}"

      # - unique_id: climate_basement_temp
      #   name: "Basement Temperature"
      #   unit_of_measurement: "°C"
      #   icon: mdi:thermometer
      #   state: "{{ states('sensor.basement_temperature_sensor_temperature') }}"
      #   availability: "{{ is_number(states('sensor.basement_temperature_sensor_temperature')) }}"

      # - unique_id: climate_bedroom_temp
      #   name: "Bedroom Temperature"
      #   unit_of_measurement: "°C"
      #   icon: mdi:thermometer
      #   state: "{{ states('sensor.bedroom_temperature_sensor_temperature') }}"
      #   availability: "{{ is_number(states('sensor.bedroom_temperature_sensor_temperature')) }}"

      # - unique_id: climate_living_room_temp
      #   name: "Living Room Temperature"
      #   unit_of_measurement: "°C"
      #   icon: mdi:thermometer
      #   state: "{{ states('sensor.living_room_temperature_sensor_temperature') }}"
      #   availability: "{{ is_number(states('sensor.living_room_temperature_sensor_temperature')) }}"


      ############################################################################
      #                                                                          #
      #   Number of Climates On                                                  #
      #                                                                          #
      ############################################################################

      - name: "Number Of Climate Entities On"
        unique_id: number_of_climate_entities_on
        state: >
          {{ expand(label_entities("climate")) | rejectattr('state','eq','off') | rejectattr('state','eq','unavailable') | rejectattr('state','eq','unknown') | list | count }}
        # state: >
        #   {% set count = namespace(value=0) %}
        #   {% for entity_id in state_attr('group.all_climate_entities','entity_id') %}
        #     {% if (states(entity_id) == 'on' or states(entity_id) == 'heat' or states(entity_id) == 'cool' or states(entity_id) == 'heat_cool') %}
        #       {% set count.value = count.value + 1 %}
        #     {% endif %}
        #   {% endfor %}
        #   {{ count.value }}



      ############################################################################
      #                                                                          #
      #   Lowest and Highest Temperatures Home                                   #
      #                                                                          #
      ############################################################################

      # Lowest Temperature Home
      - unique_id: lowest_temperature_home
        name: "Lowest Temperature Home"
        unit_of_measurement: "°C"
        icon: mdi:thermometer
        state: >
          {% set temp_list = expand(label_entities("temperature")) | map(attribute='state') | list | sort %}
          {{ temp_list[0] }}
        availability: >
          {% set temp_list = expand(label_entities("temperature")) | map(attribute='state') | list | sort %}
          {{ is_number(temp_list[0]) }}

      # Highest Temperature Home
      - unique_id: highest_temperature_home
        name: "Highest Temperature Home"
        unit_of_measurement: "°C"
        icon: mdi:thermometer
        state: >
          {% set temp_list = expand(label_entities("temperature")) | map(attribute='state') | list | sort %}
          {{ temp_list[-1] }}
        availability: >
          {% set temp_list = expand(label_entities("temperature")) | map(attribute='state') | list | sort %}
          {{ is_number(temp_list[-1]) }}          



# sensor:

#   ############################################################################
#   #                                                                          #
#   #   Lowest Temperature Home                                                #
#   #                                                                          #
#   ############################################################################

#   - platform: min_max
#     unique_id : lowest_temperature_home
#     name: Lowest Temperature Home
#     type: min
#     round_digits: 1
#     entity_ids:
#       - sensor.climate_kfir_temp
#       - sensor.climate_ronen_temp
#       - sensor.climate_basement_temp
#       - sensor.climate_bedroom_temp
#       - sensor.climate_living_room_temp
#       - sensor.kitchen_temperature_sensor_temperature
#       - sensor.work_room_temperature_sensor_temperature


#   ############################################################################
#   #                                                                          #
#   #   Highest Temperature Home                                               #
#   #                                                                          #
#   ############################################################################

#   - platform: min_max
#     unique_id : highest_temperature_home
#     name: Highest Temperature Home
#     type: max
#     round_digits: 1
#     entity_ids:
#       - sensor.climate_kfir_temp
#       - sensor.climate_ronen_temp
#       - sensor.climate_basement_temp
#       - sensor.climate_bedroom_temp
#       - sensor.climate_living_room_temp
#       - sensor.kitchen_temperature_sensor_temperature
#       - sensor.work_room_temperature_sensor_temperature

 