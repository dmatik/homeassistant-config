blueprint:
  name: Motion Lights
  description: Turn lights on when Motion detected, Turn them off when no Motion detected for selected amount of time.
  domain: automation
  input:
    motion_entity:
      name: Motion Sensor
      selector:
        entity:
          domain: binary_sensor
    light_level_entity:
      name: Light Level Sensor
      selector:
        entity:
          domain: sensor
    light_level_threshold_value:
      name: Light Level Threshold
      default: 800
      selector:
        number:
          min: 0
          max: 3000
          unit_of_measurement: lx
    motion_timer_entity:
      name: Timer Helper
      selector:
        entity:
          domain: timer
    light_target_on:
      name: Lights to turn on
      selector:
        entity:
          multiple: true
          domain: light
    light_target_off:
      name: Lights to turn off
      selector:
        entity:
          multiple: true
          domain: light
trigger:
  # Motion on trigger for turning on the lights
  - platform: state
    entity_id: !input motion_entity
    to: "on"
    id: motion_on
  # Motion off trigger for starting the timer
  - platform: state
    entity_id: !input motion_entity
    to: "off"
    id: motion_off
  # Timer finished trigger for turning off the lights
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: !input motion_timer_entity
    id: timer_finished
  # Lights on trigger for starting the timer in case the lights turned on without motion detected
  - platform: state
    entity_id: !input light_target_off
    to: "on"
    id: lights_on
action:
  - choose:
      - conditions:
          - condition: trigger
            id:
              - motion_on
          - condition: numeric_state
            entity_id: !input light_level_entity
            below: !input light_level_threshold_value
        sequence:
          - service: light.turn_on
            entity_id: !input light_target_on
          - service: timer.cancel
            data: {}
            target:
              entity_id: !input motion_timer_entity
      - conditions:
          - condition: trigger
            id:
              - motion_off
        sequence:
          - service: timer.start
            data: {}
            target:
              entity_id: !input motion_timer_entity
      - conditions:
          - condition: trigger
            id:
              - timer_finished
        sequence:
          - service: light.turn_off
            entity_id: !input light_target_off
      - conditions:
          - condition: trigger
            id:
              - lights_on
          - condition: state
            entity_id: !input motion_entity
            state: "off"
        sequence:
          - service: timer.start
            data: {}
            target:
              entity_id: !input motion_timer_entity
max_exceeded: silent