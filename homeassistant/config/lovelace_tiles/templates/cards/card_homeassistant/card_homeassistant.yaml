card_homeassistant:
  template:
    - two_rows_card
  variables:
    ulm_card_homeassistant_entity: 'binary_sensor.ha_update_available'
    ulm_card_homeassistant_curr_version: 'sensor.ha_current_version'
    ulm_card_homeassistant_latest_version: 'sensor.ha_available_version'
    ulm_card_homeassistant_update_script: 'script.update_homeassistant_container'
  triggers_update: "all"
  custom_fields:
    item1:
      card:
        triggers_update: "all"
        type: "custom:button-card"
        template:
          - "icon_info"
          - "blue_on"
          - "ulm_language_variables_EN"
        icon: 'mdi:home-assistant'
        tap_action:
          action: "none"
        entity: "[[[ return variables.ulm_card_homeassistant_entity ]]]"
        name: "[[[ return states[variables.ulm_card_homeassistant_curr_version].state ]]]"
        label: |-
          [[[
              var latest_version = states[variables.ulm_card_homeassistant_latest_version].state;
              if (latest_version == 'unavailable') {
                var latest_version = '--';
              }
              return 'Latest: ' + latest_version;
          ]]]
    item2:
      card:
        type: "custom:button-card"
        template: "list_2_items"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              template: "widget_text"
              name: 'Release Notes'
              tap_action: 
                action: url
                url_path: https://www.home-assistant.io/latest-release-notes/
          item2:
            card:
              type: "custom:button-card"
              template: 
                - "widget_text"
                - "ha_update_in_progress"
              variables:
                ulm_card_homeassistant_update_script: "[[[ return variables.ulm_card_homeassistant_update_script ]]]"
              entity: "[[[ return variables.ulm_card_homeassistant_entity ]]]"



ha_update_in_progress:
  name: |
    [[[
      if ( states[variables.ulm_card_homeassistant_update_script].state == "on" ) {
        return "Updating...";
      } else {
        return "Update";
      }
    ]]]
  tap_action:
    action: |
      [[[
        if ( states[variables.ulm_card_homeassistant_update_script].state == "on" || entity.state != "on" ) {
          return "none";
        } else {
          return "call-service";
        }
      ]]]    
    service: "[[[ return variables.ulm_card_homeassistant_update_script ]]]"    