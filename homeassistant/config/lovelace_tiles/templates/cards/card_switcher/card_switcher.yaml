card_switcher:
  template:
    - two_rows_card
    - ulm_language_variables
  variables:
    x_ulm_card_switcher_name: null
    ulm_card_switcher_icon: ""
    ulm_card_switcher_entity: ""
    ulm_card_switcher_timer_script: ""
    ulm_card_switcher_time_left: ""
    ulm_card_switcher_timer_minutes: ""
    ulm_card_switcher_electric_current: ""
    ulm_card_switcher_auto_off: ""
  triggers_update: "all"
  custom_fields:
    item1:
      card:
        triggers_update: "all"
        variables:
          ulm_card_switcher_time_left: '[[[ return variables.ulm_card_switcher_time_left ]]]'
          ulm_card_switcher_electric_current: '[[[ return variables.ulm_card_switcher_electric_current ]]]'
          ulm_card_switcher_entity: '[[[ return variables.ulm_card_switcher_entity ]]]'
          ulm_card_switcher_timer_minutes: '[[[ return variables.ulm_card_switcher_timer_minutes ]]]'
          ulm_card_switcher_timer_script: '[[[ return variables.ulm_card_switcher_timer_script ]]]'
          ulm_card_switcher_auto_off: '[[[ return variables.ulm_card_switcher_auto_off ]]]'
          ulm_card_switcher_timer_service: '[[[ return variables.ulm_card_switcher_timer_service ]]]'
          #x_ulm_card_switcher_name: '[[[ return variables.x_ulm_card_switcher_name ]]]'
          x_ulm_card_switcher_name: |
            [[[
              if (variables.x_ulm_card_switcher_name != null) {
                return variables.x_ulm_card_switcher_name;
              } else {
                return states[variables.ulm_card_switcher_entity].attributes.friendly_name;
              }
            ]]]
          ulm_card_switcher_icon: '[[[ return variables.ulm_card_switcher_icon ]]]'
        type: "custom:button-card"
        template:
          - "icon_info"
          - "ulm_language_variables"
          - "switcher"
          - "popup_switcher"
        entity: "[[[ return variables.ulm_card_switcher_entity ]]]"
        #name: "[[[ return variables.x_ulm_card_switcher_name ]]]"
        name: |
          [[[
            if (variables.x_ulm_card_switcher_name != null) {
              return variables.x_ulm_card_switcher_name;
            } else {
              return states[variables.ulm_card_switcher_entity].attributes.friendly_name;
            }
          ]]]
    item2:
      card:
        type: "custom:button-card"
        template: "list_two_third_items"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              entity: '[[[ return variables.ulm_card_switcher_entity ]]]'
              tap_action:
                action: "call-service"
                service: "switch.toggle"
                service_data:
                  entity_id: "[[[ return variables.ulm_card_switcher_entity ]]]"
              # icon: |
              #   [[[
              #     if ( states[variables.ulm_card_switcher_entity].state == "on" )
              #       return "mdi:power-cycle";
              #     else 
              #       return "mdi:power-off";
              #   ]]]
              icon: 'mdi:power'
              state:
                - value: "on"
                  styles:
                    icon:
                      - color: 'rgb(255,255,255)'                          
                    img_cell:
                      - background-color: 'var(--red-color)'
                - value: "off"
                  styles:
                    icon:
                      - color: 'rgb(255,255,255)'                          
                    img_cell:
                      - background-color: 'rgb(var(--rgb-grey-color))'                       
          item2:
            card:
              template: 'list_2_items'
              type: 'custom:button-card'
              styles:
                card:
                  - box-shadow: "none"
                  - padding-top: "0px"
                  - padding-bottom: "0px"
                  - padding-right: "10px"
                  - padding-left: "6px"
                  - background-color: "rgba(var(--rgb-disabled-color),0.2)"
                  - border-radius: "var(--control-button-border-radius)"
              custom_fields:
                item1:
                  card:
                    type: "custom:button-card"
                    template: "widget_icon_transparent"
                    variables:
                      ulm_widget_entity: "[[[ return variables.ulm_card_switcher_entity ]]]"
                    tap_action:
                      action: "call-service"
                      service: "[[[ return variables.ulm_card_switcher_timer_service ]]]"
                      data:
                        timer_minutes: "[[[ return states[variables.ulm_card_switcher_timer_minutes].state ]]]"
                      target:
                        entity_id: "[[[ return variables.ulm_card_switcher_entity ]]]"
                      # action: "call-service"
                      # service: "script.turn_on"
                      # service_data:
                      #   entity_id: "[[[ return variables.ulm_card_switcher_timer_script ]]]"
                    icon: "mdi:timer-outline"
                item2:
                  card:
                    type: "custom:button-card"
                    template: "switcher_next_select"
                    variables:
                      ulm_widget_entity: "[[[ return variables.ulm_card_switcher_entity ]]]"
                    name: "[[[ return states[variables.ulm_card_switcher_timer_minutes].state ]]]"
                    tap_action:
                      action: "call-service"
                      service: "input_select.select_next"
                      service_data:
                        entity_id: "[[[ return variables.ulm_card_switcher_timer_minutes ]]]"


switcher:
  triggers_update: "all"
  tap_action:
    action: "more-info"
  icon: "[[[ return variables.ulm_card_switcher_icon ]]]"
  label: >-
    [[[
        if ( entity.state == 'on' )
          return states[variables.ulm_card_switcher_time_left].state  
            + " â€¢ " + states[variables.ulm_card_switcher_electric_current].state + "A";
        else 
          return variables.ulm_off;
    ]]]
  state:
    - operator: "template"
      value: "[[[ return entity.state == 'on'; ]]]"
      styles:
        icon:
          - color: 'var(--red-color)'
        img_cell:
          - background-color: 'rgba(var(--rgb-red-color),0.2)'


switcher_next_select:
  show_icon: false
  show_name: true
  styles:
    grid:
      - grid-template-areas: "'n'"
    card:
      - box-shadow: "none"
      - padding: "0px"
      - background: "none"
      - border-radius: "var(--control-button-border-radius)"
      - place-self: "center"
      - height: "40px"
      - border-style: "none"
      - --mdc-ripple-press-opacity: 0.0
    name:
      - color: 'var(--primary-text-color)'
      - font-weight: '500'
      - font-size: '20px'
      - padding-top: '0.5px'
  size: "20px"